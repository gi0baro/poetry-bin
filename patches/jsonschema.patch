diff --git a/jsonschema/__version__.py b/jsonschema/__version__.py
new file mode 100644
index 0000000..10b26df
--- /dev/null
+++ b/jsonschema/__version__.py
@@ -0,0 +1 @@
+__version__ = "4.17.3"
diff --git a/jsonschema/_utils.py b/jsonschema/_utils.py
index 418348c..9a8776f 100644
--- a/jsonschema/_utils.py
+++ b/jsonschema/_utils.py
@@ -5,11 +5,7 @@ import json
 import re
 import sys
 
-# The files() API was added in Python 3.9.
-if sys.version_info >= (3, 9):  # pragma: no cover
-    from importlib import resources
-else:  # pragma: no cover
-    import importlib_resources as resources  # type: ignore
+from importlib import resources
 
 
 class URIDict(MutableMapping):
@@ -56,10 +52,8 @@ def load_schema(name):
     """
     Load a schema from ./schemas/``name``.json and return it.
     """
-
-    path = resources.files(__package__).joinpath(f"schemas/{name}.json")
-    data = path.read_text(encoding="utf-8")
-    return json.loads(data)
+    from . import __name__
+    return json.loads(resources.read_text(f"{__name__}.schemas", f"{name}.json"))
 
 
 def format_as_index(container, indices):
diff --git a/jsonschema/schemas/__init__.py b/jsonschema/schemas/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/jsonschema/schemas/vocabularies/__init__.py b/jsonschema/schemas/vocabularies/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/jsonschema/schemas/vocabularies/draft2019-09/__init__.py b/jsonschema/schemas/vocabularies/draft2019-09/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/jsonschema/schemas/vocabularies/draft2020-12/__init__.py b/jsonschema/schemas/vocabularies/draft2020-12/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/jsonschema/validators.py b/jsonschema/validators.py
index 66e803e..8d594bd 100644
--- a/jsonschema/validators.py
+++ b/jsonschema/validators.py
@@ -103,10 +103,34 @@ def _id_of(schema):
 
 def _store_schema_list():
     if not _VOCABULARIES:
-        package = _utils.resources.files(__package__)
-        for version in package.joinpath("schemas", "vocabularies").iterdir():
-            for path in version.iterdir():
-                vocabulary = json.loads(path.read_text())
+        from . import __name__
+        items = {
+            "2019-09": [
+                "applicator",
+                "content",
+                "core",
+                "meta-data",
+                "validation"
+            ],
+            "2020-12": [
+                "applicator",
+                "content",
+                "core",
+                "format",
+                "format-annotation",
+                "format-assertion",
+                "meta-data",
+                "unevaluated",
+                "validation"
+            ]
+        }
+        for version, vocabularies in items.items():
+            for vitem in vocabularies:
+                vocabulary = json.loads(
+                    _utils.resources.read_text(
+                        f"{__name__}.schemas.vocabularies.draft{version}", f"{vitem}"
+                    )
+                )
                 _VOCABULARIES.append((vocabulary["$id"], vocabulary))
     return [
         (id, validator.META_SCHEMA) for id, validator in _META_SCHEMAS.items()
diff --git a/pyproject.toml b/pyproject.toml
index f5fe8db..ea9a547 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,9 +1,9 @@
 [build-system]
-requires = ["hatchling", "hatch-vcs", "hatch-fancy-pypi-readme"]
+requires = ["hatchling", "hatch-fancy-pypi-readme"]
 build-backend = "hatchling.build"
 
 [tool.hatch.version]
-source = "vcs"
+path = "jsonschema/__version__.py"
 
 [project]
 name = "jsonschema"
